name: Push Docker Image to ECR , Upload to S3 and Deploy CloudFormation stack

on:
  push:
    branches:
      - main

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Dockerize data_quality_checks file and push to ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        cd data_quality_checks
        docker build -t data-quality-ecr:latest .
        docker tag data-quality-ecr:latest $ECR_REGISTRY/data-quality-ecr:latest
        docker push $ECR_REGISTRY/data-quality-ecr:latest
        cd ..
    outputs:
      ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}

  s3:
    runs-on: ubuntu-latest
    needs: docker
    if: success() && needs.docker.result == 'success'
    steps:
    - name: Upload spark-app.py to S3
      uses: docker://amazon/aws-cli:2.0.7
      with:
        args: s3 cp simple-pyspark-app.py s3://mysparkawsbucket/spark-app.py

  cloudformation:
    runs-on: ubuntu-latest
    needs: docker
    if: success() && needs.docker.result == 'success'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Deploy CloudFormation stack
        uses: aws-actions/aws-cloudformation-github-deploy@v1.1.0
        with:
          template: cloudformation/cloudformation.yml
          name: my-cloudformation-stack
          capabilities: CAPABILITY_NAMED_IAM

